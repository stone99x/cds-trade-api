<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mars.cds.mapper.BizUserMapper">

    <sql id="base_filed_all">
        t
        .
        `id`
        ,
        t.`phone`,
        t.`selfId`,
        t.`inviteId`,
        t.`level`,
        t.`balance`,
        t.`username`,
        t.`email`,
        t.`telegram`,
        t.`address`,
        t.`aadharFront`,
        t.`aadharReverse`,
        t.`panUrl`,
        t.`avatar`,
        t.`firstLoginTime`,
        t.`lastLoginTime`,
        t.`ip`,
        t.`ipRegion`,
        t.`status`,
        t.`onlineH5Status`,
        t.`onlineAppStatus`,
        t.`remark`,
        t.`withdrawStatus`,
        t.`del`,
        t.`createTime`
    </sql>

    <select id="queryExistBizUser" parameterType="string" resultType="int">
        select count(1)
        from biz_user
        where phone = #{phone}
    </select>

    <select id="queryExistInviteId" parameterType="string" resultType="BizUser">
        select t.id, t.level, t.inviteId, t.status
        from biz_user t
        where t.selfId = #{inviteId}
    </select>

    <insert id="insertBizUser" keyColumn="id" keyProperty="id" parameterType="BizUser"
            useGeneratedKeys="true">
        insert into biz_user(`phone`, `password`, `selfId`, `inviteId`, `level`)
            value (#{phone}, #{password}, #{selfId}, #{inviteId}, #{level})
    </insert>

    <select id="queryLogin" resultType="BizUser">
        select
        <include refid="base_filed_all"/>
        from `biz_user` t
        where t.`phone` = #{phone}
        and t.`password` = #{password}
    </select>

    <update id="updatePasswordByPhone" parameterType="BizUser">
        update biz_user
        set password   = #{password},
            updateTime = now()
        where phone = #{phone}
    </update>

    <update id="updateUserLastLoginInfo" parameterType="BizUser">
        update biz_user t
        <set>
            <if test="firstLoginTime == null or firstLoginTime == ''">
                t.firstLoginTime=now(),
            </if>
            <if test="onlineH5Status==1">
                t.onlineH5Status=1,
            </if>
            <if test="onlineAppStatus==1">
                t.onlineAppStatus=1,
            </if>
            t.ip = #{ip},
            t.ipRegion = #{ipRegion},
            t.lastLoginTime = now(),
        </set>
        where t.id = #{id};
    </update>

    <update id="updateOfflineStatus" parameterType="BizUser">
        update biz_user
        set onlineH5Status  = 2,
            onlineAppStatus = 2
        where id = #{id}
    </update>

    <insert id="insertUserLoginLog" keyColumn="id" keyProperty="id"
            parameterType="BizUserLoginLog" useGeneratedKeys="true">
        insert into biz_user_login_log (userId, ip, ipRegion, loginTime, dataSources)
        values (#{userId}, #{ip}, #{ipRegion}, now(), #{dataSources})
    </insert>

    <select id="queryUserDetailById" parameterType="int" resultType="BizUser">
        select
        <include refid="base_filed_all"/>
        from biz_user t
        where t.`id` = #{userId}
    </select>

    <select id="queryUserDetailByIdLock" parameterType="int" resultType="BizUser">
        select
        <include refid="base_filed_all"/>
        from biz_user t
        where t.`id` = #{userId} for update ;
    </select>

    <update id="updateBasicInfo">
        update biz_user
        <set>
            <if test="profilePicture != null and profilePicture != ''">
                profilePicture = #{profilePicture},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark}
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateSalaryBalance">
        update biz_user t
        set t.salary   = t.salary - #{salary},
            updateTime = now()
        where id = #{id}
    </update>

    <update id="updateBalanceById" parameterType="BizUser">
        update `biz_user` t
        set t.`balance`=t.`balance` + #{balance},
            t.`updateTime`=now()
        where t.`id` = #{id};
    </update>

</mapper>
